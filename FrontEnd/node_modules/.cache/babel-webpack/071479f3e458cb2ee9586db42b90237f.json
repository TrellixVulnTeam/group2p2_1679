{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/18048/Documents/Revature/Projects/Project 2/group2p2/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.id = 20;\n    this.url = \"https://api.jikan.moe/v3/anime/\";\n  }\n\n  sendAnime(response) {\n    console.log(Object.values(this.anime));\n  }\n\n  setAnime() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.getAnimeId(\"naruto\");\n\n      const response = yield (yield fetch(_this.url + _this.id)).json();\n      _this.title = response.title;\n      console.log(_this.title);\n      _this.anime = response;\n      console.log(_this.anime.title);\n    })();\n  }\n\n  getAnimeId(name) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const response = yield (yield fetch(\"https://private-anon-0553ce78b0-jikan.apiary-proxy.com/v3/search/anime?q=\" + name + \"&page=1\")).json();\n      _this2.id = response.results.mal_id;\n    })();\n  }\n\n}\n\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/18048/Documents/Revature/Projects/Project 2/group2p2/frontend/src/app/shared/api.service.ts"],"names":["i0","i1","ApiService","constructor","http","id","url","sendAnime","response","console","log","Object","values","anime","setAnime","getAnimeId","fetch","json","title","name","results","mal_id","ɵfac","ApiService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,UAAN,CAAiB;AACpBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,EAAL,GAAU,EAAV;AACA,SAAKC,GAAL,GAAW,iCAAX;AACH;;AACDC,EAAAA,SAAS,CAACC,QAAD,EAAW;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,MAAP,CAAc,KAAKC,KAAnB,CAAZ;AACH;;AACKC,EAAAA,QAAQ,GAAG;AAAA;;AAAA;AACb,MAAA,KAAI,CAACC,UAAL,CAAgB,QAAhB;;AACA,YAAMP,QAAQ,SAAS,OAAOQ,KAAK,CAAC,KAAI,CAACV,GAAL,GAAW,KAAI,CAACD,EAAjB,CAAZ,EAAkCY,IAAlC,EAAvB;AACA,MAAA,KAAI,CAACC,KAAL,GAAaV,QAAQ,CAACU,KAAtB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACQ,KAAjB;AACA,MAAA,KAAI,CAACL,KAAL,GAAaL,QAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACG,KAAL,CAAWK,KAAvB;AANa;AAOhB;;AACKH,EAAAA,UAAU,CAACI,IAAD,EAAO;AAAA;;AAAA;AACnB,YAAMX,QAAQ,SAAS,OAAOQ,KAAK,CAAC,8EAA8EG,IAA9E,GAAqF,SAAtF,CAAZ,EAA8GF,IAA9G,EAAvB;AACA,MAAA,MAAI,CAACZ,EAAL,GAAUG,QAAQ,CAACY,OAAT,CAAiBC,MAA3B;AAFmB;AAGtB;;AApBmB;;AAsBxBnB,UAAU,CAACoB,IAAX,GAAkB,SAASC,kBAAT,CAA4BC,CAA5B,EAA+B;AAAE,SAAO,KAAKA,CAAC,IAAItB,UAAV,EAAsBF,EAAE,CAACyB,QAAH,CAAYxB,EAAE,CAACyB,UAAf,CAAtB,CAAP;AAA2D,CAA9G;;AACAxB,UAAU,CAACyB,KAAX,GAAmB,aAAc3B,EAAE,CAAC4B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAE3B,UAAT;AAAqB4B,EAAAA,OAAO,EAAE5B,UAAU,CAACoB,IAAzC;AAA+CS,EAAAA,UAAU,EAAE;AAA3D,CAAtB,CAAjC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class ApiService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.id = 20;\r\n        this.url = \"https://api.jikan.moe/v3/anime/\";\r\n    }\r\n    sendAnime(response) {\r\n        console.log(Object.values(this.anime));\r\n    }\r\n    async setAnime() {\r\n        this.getAnimeId(\"naruto\");\r\n        const response = await (await fetch(this.url + this.id)).json();\r\n        this.title = response.title;\r\n        console.log(this.title);\r\n        this.anime = response;\r\n        console.log(this.anime.title);\r\n    }\r\n    async getAnimeId(name) {\r\n        const response = await (await fetch(\"https://private-anon-0553ce78b0-jikan.apiary-proxy.com/v3/search/anime?q=\" + name + \"&page=1\")).json();\r\n        this.id = response.results.mal_id;\r\n    }\r\n}\r\nApiService.ɵfac = function ApiService_Factory(t) { return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient)); };\r\nApiService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ApiService, factory: ApiService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}