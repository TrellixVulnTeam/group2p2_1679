{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/18048/Documents/Revature/Projects/Project 2/group2p2/FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TruncatePipe } from './pipes/truncate.pipe';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../core/auth/services/auth.service\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    Authorization: localStorage.getItem('access_token')\n  })\n};\nexport class ApiService {\n  constructor(http, authService, handler) {\n    this.http = http;\n    this.authService = authService;\n    this.user_id = JSON.parse(localStorage.getItem(\"user\")).id;\n    this.token = this.authService.getToken();\n    this.url = \"https://api.jikan.moe/v3/anime/20\";\n    this.truncatePipe = new TruncatePipe();\n    this.http = new HttpClient(handler);\n  }\n\n  setAnimeId(name) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const reqUrl = \"https://api.jikan.moe/v3/search/anime?q=\" + name + \"&page=1&limit=1\";\n      const response = yield (yield fetch(reqUrl)).json();\n      _this.anime_id = yield response.results[0].mal_id;\n      console.log(_this.anime_id);\n    })();\n  }\n\n  getAnime(name) {\n    this.setAnimeId(name);\n    return this.http.get(this.url).pipe(map(res => {\n      return {\n        id: res.mal_id,\n        title: res.title,\n        rating: res.rating,\n        score: res.score,\n        synopsis: JSON.stringify(res.synopsis).substring(0, 200).concat(\"...\"),\n        image: res.image_url,\n        themes: {\n          id: res.themes[0].mal_id,\n          name: res.themes[0].name\n        },\n        studios: {\n          id: res.studios[0].mal_id,\n          name: res.studios[0].name\n        }\n      };\n    }));\n  }\n\n  handleError(error) {\n    if (error.status === 0) {\n      //Client-side or network\n      console.error('An error occurred:', error.error);\n    } else {\n      //Back-end\n      console.error(`Backend returned code ${error.status}, body was: `, error.error);\n    }\n\n    return throwError('Something bad happened; please try again later.');\n  }\n\n}\n\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService), i0.ɵɵinject(i1.HttpBackend));\n};\n\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/18048/Documents/Revature/Projects/Project 2/group2p2/FrontEnd/src/app/shared/api.service.ts"],"names":["HttpClient","HttpHeaders","throwError","map","TruncatePipe","i0","i1","i2","httpOptions","headers","Authorization","localStorage","getItem","ApiService","constructor","http","authService","handler","user_id","JSON","parse","id","token","getToken","url","truncatePipe","setAnimeId","name","reqUrl","response","fetch","json","anime_id","results","mal_id","console","log","getAnime","get","pipe","res","title","rating","score","synopsis","stringify","substring","concat","image","image_url","themes","studios","handleError","error","status","ɵfac","ApiService_Factory","t","ɵɵinject","AuthService","HttpBackend","ɵprov","ɵɵdefineInjectable","factory","providedIn"],"mappings":"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","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { TruncatePipe } from './pipes/truncate.pipe';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nimport * as i2 from \"../core/auth/services/auth.service\";\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem('access_token')\r\n    })\r\n};\r\nexport class ApiService {\r\n    constructor(http, authService, handler) {\r\n        this.http = http;\r\n        this.authService = authService;\r\n        this.user_id = JSON.parse(localStorage.getItem(\"user\")).id;\r\n        this.token = this.authService.getToken();\r\n        this.url = \"https://api.jikan.moe/v3/anime/20\";\r\n        this.truncatePipe = new TruncatePipe;\r\n        this.http = new HttpClient(handler);\r\n    }\r\n    async setAnimeId(name) {\r\n        const reqUrl = \"https://api.jikan.moe/v3/search/anime?q=\" + name + \"&page=1&limit=1\";\r\n        const response = await (await fetch(reqUrl)).json();\r\n        this.anime_id = await response.results[0].mal_id;\r\n        console.log(this.anime_id);\r\n    }\r\n    getAnime(name) {\r\n        this.setAnimeId(name);\r\n        return this.http.get(this.url).pipe(map((res) => {\r\n            return {\r\n                id: res.mal_id,\r\n                title: res.title,\r\n                rating: res.rating,\r\n                score: res.score,\r\n                synopsis: JSON.stringify(res.synopsis).substring(0, 200).concat(\"...\"),\r\n                image: res.image_url,\r\n                themes: {\r\n                    id: res.themes[0].mal_id,\r\n                    name: res.themes[0].name\r\n                },\r\n                studios: {\r\n                    id: res.studios[0].mal_id,\r\n                    name: res.studios[0].name\r\n                }\r\n            };\r\n        }));\r\n    }\r\n    handleError(error) {\r\n        if (error.status === 0) {\r\n            //Client-side or network\r\n            console.error('An error occurred:', error.error);\r\n        }\r\n        else {\r\n            //Back-end\r\n            console.error(`Backend returned code ${error.status}, body was: `, error.error);\r\n        }\r\n        return throwError('Something bad happened; please try again later.');\r\n    }\r\n}\r\nApiService.ɵfac = function ApiService_Factory(t) { return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService), i0.ɵɵinject(i1.HttpBackend)); };\r\nApiService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ApiService, factory: ApiService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}