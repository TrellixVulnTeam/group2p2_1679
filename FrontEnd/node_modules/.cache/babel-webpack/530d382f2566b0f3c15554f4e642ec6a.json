{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/18048/Documents/Revature/Projects/Project 2/group2p2/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/*! MIT License Â© Sindre Sorhus */\nconst getGlobal = property => {\n  /* istanbul ignore next */\n  if (typeof self !== 'undefined' && self && property in self) {\n    return self[property];\n  }\n  /* istanbul ignore next */\n\n\n  if (typeof window !== 'undefined' && window && property in window) {\n    return window[property];\n  }\n\n  if (typeof global !== 'undefined' && global && property in global) {\n    return global[property];\n  }\n  /* istanbul ignore next */\n\n\n  if (typeof globalThis !== 'undefined' && globalThis) {\n    return globalThis[property];\n  }\n};\n\nconst document = getGlobal('document');\nconst Headers = getGlobal('Headers');\nconst Response = getGlobal('Response');\nconst ReadableStream = getGlobal('ReadableStream');\nconst fetch = getGlobal('fetch');\nconst AbortController = getGlobal('AbortController');\nconst FormData = getGlobal('FormData');\n\nconst isObject = value => value !== null && typeof value === 'object';\n\nconst supportsAbortController = typeof AbortController === 'function';\nconst supportsStreams = typeof ReadableStream === 'function';\nconst supportsFormData = typeof FormData === 'function';\n\nconst deepMerge = (...sources) => {\n  let returnValue = {};\n\n  for (const source of sources) {\n    if (Array.isArray(source)) {\n      if (!Array.isArray(returnValue)) {\n        returnValue = [];\n      }\n\n      returnValue = [...returnValue, ...source];\n    } else if (isObject(source)) {\n      for (let [key, value] of Object.entries(source)) {\n        if (isObject(value) && Reflect.has(returnValue, key)) {\n          value = deepMerge(returnValue[key], value);\n        }\n\n        returnValue = { ...returnValue,\n          [key]: value\n        };\n      }\n    }\n  }\n\n  return returnValue;\n};\n\nconst requestMethods = ['get', 'post', 'put', 'patch', 'head', 'delete'];\nconst responseTypes = {\n  json: 'application/json',\n  text: 'text/*',\n  formData: 'multipart/form-data',\n  arrayBuffer: '*/*',\n  blob: '*/*'\n};\nconst retryMethods = new Set(['get', 'put', 'head', 'delete', 'options', 'trace']);\nconst retryStatusCodes = new Set([408, 413, 429, 500, 502, 503, 504]);\nconst retryAfterStatusCodes = new Set([413, 429, 503]);\n\nclass HTTPError extends Error {\n  constructor(response) {\n    super(response.statusText);\n    this.name = 'HTTPError';\n    this.response = response;\n  }\n\n}\n\nclass TimeoutError extends Error {\n  constructor() {\n    super('Request timed out');\n    this.name = 'TimeoutError';\n  }\n\n}\n\nconst safeTimeout = (resolve, reject, ms) => {\n  if (ms > 2147483647) {\n    // The maximum value of a 32bit int (see #117)\n    reject(new RangeError('The `timeout` option cannot be greater than 2147483647'));\n  }\n\n  return setTimeout(resolve, ms);\n};\n\nconst delay = ms => new Promise((resolve, reject) => safeTimeout(resolve, reject, ms)); // `Promise.race()` workaround (#91)\n\n\nconst timeout = (promise, ms, abortController) => new Promise((resolve, reject) => {\n  const timeoutID = safeTimeout(() => {\n    if (supportsAbortController) {\n      abortController.abort();\n    }\n\n    reject(new TimeoutError());\n  }, reject, ms);\n  /* eslint-disable promise/prefer-await-to-then */\n\n  promise.then(resolve).catch(reject).then(() => {\n    clearTimeout(timeoutID);\n  });\n  /* eslint-enable promise/prefer-await-to-then */\n});\n\nconst normalizeRequestMethod = input => requestMethods.includes(input) ? input.toUpperCase() : input;\n\nclass Ky {\n  constructor(input, {\n    timeout = 10000,\n    hooks,\n    throwHttpErrors = true,\n    searchParams,\n    json,\n    ...otherOptions\n  }) {\n    var _this = this;\n\n    this._retryCount = 0;\n    this._options = {\n      method: 'get',\n      credentials: 'same-origin',\n      // TODO: This can be removed when the spec change is implemented in all browsers. Context: https://www.chromestatus.com/feature/4539473312350208\n      retry: 2,\n      ...otherOptions\n    };\n\n    if (supportsAbortController) {\n      this.abortController = new AbortController();\n\n      if (this._options.signal) {\n        this._options.signal.addEventListener('abort', () => {\n          this.abortController.abort();\n        });\n      }\n\n      this._options.signal = this.abortController.signal;\n    }\n\n    this._options.method = normalizeRequestMethod(this._options.method);\n    this._options.prefixUrl = String(this._options.prefixUrl || '');\n    this._input = String(input || '');\n\n    if (this._options.prefixUrl && this._input.startsWith('/')) {\n      throw new Error('`input` must not begin with a slash when using `prefixUrl`');\n    }\n\n    if (this._options.prefixUrl && !this._options.prefixUrl.endsWith('/')) {\n      this._options.prefixUrl += '/';\n    }\n\n    this._input = this._options.prefixUrl + this._input;\n\n    if (searchParams) {\n      const url = new URL(this._input, document && document.baseURI);\n\n      if (typeof searchParams === 'string' || URLSearchParams && searchParams instanceof URLSearchParams) {\n        url.search = searchParams;\n      } else if (Object.values(searchParams).every(param => typeof param === 'number' || typeof param === 'string')) {\n        url.search = new URLSearchParams(searchParams).toString();\n      } else {\n        throw new Error('The `searchParams` option must be either a string, `URLSearchParams` instance or an object with string and number values');\n      }\n\n      this._input = url.toString();\n    }\n\n    this._timeout = timeout;\n    this._hooks = deepMerge({\n      beforeRequest: [],\n      afterResponse: []\n    }, hooks);\n    this._throwHttpErrors = throwHttpErrors;\n    const headers = new Headers(this._options.headers || {});\n\n    if ((supportsFormData && this._options.body instanceof FormData || this._options.body instanceof URLSearchParams) && headers.has('content-type')) {\n      throw new Error(`The \\`content-type\\` header cannot be used with a ${this._options.body.constructor.name} body. It will be set automatically.`);\n    }\n\n    if (json) {\n      if (this._options.body) {\n        throw new Error('The `json` option cannot be used with the `body` option');\n      }\n\n      headers.set('content-type', 'application/json');\n      this._options.body = JSON.stringify(json);\n    }\n\n    this._options.headers = headers;\n\n    const fn = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* () {\n        yield delay(1);\n        let response = yield _this._fetch();\n\n        for (const hook of _this._hooks.afterResponse) {\n          // eslint-disable-next-line no-await-in-loop\n          const modifiedResponse = yield hook(response.clone());\n\n          if (modifiedResponse instanceof Response) {\n            response = modifiedResponse;\n          }\n        }\n\n        if (!response.ok && _this._throwHttpErrors) {\n          throw new HTTPError(response);\n        } // If `onDownloadProgress` is passed, it uses the stream API internally\n\n        /* istanbul ignore next */\n\n\n        if (_this._options.onDownloadProgress) {\n          if (typeof _this._options.onDownloadProgress !== 'function') {\n            throw new TypeError('The `onDownloadProgress` option must be a function');\n          }\n\n          if (!supportsStreams) {\n            throw new Error('Streams are not supported in your environment. `ReadableStream` is missing.');\n          }\n\n          return _this._stream(response.clone(), _this._options.onDownloadProgress);\n        }\n\n        return response;\n      });\n\n      return function fn() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    const isRetriableMethod = retryMethods.has(this._options.method.toLowerCase());\n    const result = isRetriableMethod ? this._retry(fn) : fn();\n\n    for (const [type, mimeType] of Object.entries(responseTypes)) {\n      result[type] = /*#__PURE__*/_asyncToGenerator(function* () {\n        headers.set('accept', mimeType);\n        return (yield result).clone()[type]();\n      });\n    }\n\n    return result;\n  }\n\n  _calculateRetryDelay(error) {\n    this._retryCount++;\n\n    if (this._retryCount < this._options.retry && !(error instanceof TimeoutError)) {\n      if (error instanceof HTTPError) {\n        if (!retryStatusCodes.has(error.response.status)) {\n          return 0;\n        }\n\n        const retryAfter = error.response.headers.get('Retry-After');\n\n        if (retryAfter && retryAfterStatusCodes.has(error.response.status)) {\n          let after = Number(retryAfter);\n\n          if (Number.isNaN(after)) {\n            after = Date.parse(retryAfter) - Date.now();\n          } else {\n            after *= 1000;\n          }\n\n          return after;\n        }\n\n        if (error.response.status === 413) {\n          return 0;\n        }\n      }\n\n      const BACKOFF_FACTOR = 0.3;\n      return BACKOFF_FACTOR * 2 ** (this._retryCount - 1) * 1000;\n    }\n\n    return 0;\n  }\n\n  _retry(fn) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        return yield fn();\n      } catch (error) {\n        const ms = _this2._calculateRetryDelay(error);\n\n        if (ms !== 0 && _this2._retryCount > 0) {\n          yield delay(ms);\n          return _this2._retry(fn);\n        }\n\n        if (_this2._throwHttpErrors) {\n          throw error;\n        }\n      }\n    })();\n  }\n\n  _fetch() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      for (const hook of _this3._hooks.beforeRequest) {\n        // eslint-disable-next-line no-await-in-loop\n        yield hook(_this3._options);\n      }\n\n      if (_this3._timeout === false) {\n        return fetch(_this3._input, _this3._options);\n      }\n\n      return timeout(fetch(_this3._input, _this3._options), _this3._timeout, _this3.abortController);\n    })();\n  }\n  /* istanbul ignore next */\n\n\n  _stream(response, onDownloadProgress) {\n    const totalBytes = Number(response.headers.get('content-length')) || 0;\n    let transferredBytes = 0;\n    return new Response(new ReadableStream({\n      start(controller) {\n        const reader = response.body.getReader();\n\n        if (onDownloadProgress) {\n          onDownloadProgress({\n            percent: 0,\n            transferredBytes: 0,\n            totalBytes\n          }, new Uint8Array());\n        }\n\n        function read() {\n          return _read.apply(this, arguments);\n        }\n\n        function _read() {\n          _read = _asyncToGenerator(function* () {\n            const {\n              done,\n              value\n            } = yield reader.read();\n\n            if (done) {\n              controller.close();\n              return;\n            }\n\n            if (onDownloadProgress) {\n              transferredBytes += value.byteLength;\n              const percent = totalBytes === 0 ? 0 : transferredBytes / totalBytes;\n              onDownloadProgress({\n                percent,\n                transferredBytes,\n                totalBytes\n              }, value);\n            }\n\n            controller.enqueue(value);\n            read();\n          });\n          return _read.apply(this, arguments);\n        }\n\n        read();\n      }\n\n    }));\n  }\n\n}\n\nconst validateAndMerge = (...sources) => {\n  for (const source of sources) {\n    if ((!isObject(source) || Array.isArray(source)) && typeof source !== 'undefined') {\n      throw new TypeError('The `options` argument must be an object');\n    }\n  }\n\n  return deepMerge({}, ...sources);\n};\n\nconst createInstance = defaults => {\n  const ky = (input, options) => new Ky(input, validateAndMerge(defaults, options));\n\n  for (const method of requestMethods) {\n    ky[method] = (input, options) => new Ky(input, validateAndMerge(defaults, options, {\n      method\n    }));\n  }\n\n  ky.create = newDefaults => createInstance(validateAndMerge(newDefaults));\n\n  ky.extend = newDefaults => createInstance(validateAndMerge(defaults, newDefaults));\n\n  return ky;\n};\n\nexport default createInstance();\nexport { HTTPError, TimeoutError };","map":{"version":3,"sources":["C:/Users/18048/Documents/Revature/Projects/Project 2/group2p2/frontend/node_modules/ky/index.js"],"names":["getGlobal","property","self","window","global","globalThis","document","Headers","Response","ReadableStream","fetch","AbortController","FormData","isObject","value","supportsAbortController","supportsStreams","supportsFormData","deepMerge","sources","returnValue","source","Array","isArray","key","Object","entries","Reflect","has","requestMethods","responseTypes","json","text","formData","arrayBuffer","blob","retryMethods","Set","retryStatusCodes","retryAfterStatusCodes","HTTPError","Error","constructor","response","statusText","name","TimeoutError","safeTimeout","resolve","reject","ms","RangeError","setTimeout","delay","Promise","timeout","promise","abortController","timeoutID","abort","then","catch","clearTimeout","normalizeRequestMethod","input","includes","toUpperCase","Ky","hooks","throwHttpErrors","searchParams","otherOptions","_retryCount","_options","method","credentials","retry","signal","addEventListener","prefixUrl","String","_input","startsWith","endsWith","url","URL","baseURI","URLSearchParams","search","values","every","param","toString","_timeout","_hooks","beforeRequest","afterResponse","_throwHttpErrors","headers","body","set","JSON","stringify","fn","_fetch","hook","modifiedResponse","clone","ok","onDownloadProgress","TypeError","_stream","isRetriableMethod","toLowerCase","result","_retry","type","mimeType","_calculateRetryDelay","error","status","retryAfter","get","after","Number","isNaN","Date","parse","now","BACKOFF_FACTOR","totalBytes","transferredBytes","start","controller","reader","getReader","percent","Uint8Array","read","done","close","byteLength","enqueue","validateAndMerge","createInstance","defaults","ky","options","create","newDefaults","extend"],"mappings":"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","sourcesContent":["/*! MIT License Â© Sindre Sorhus */\n\nconst getGlobal = property => {\n\t/* istanbul ignore next */\n\tif (typeof self !== 'undefined' && self && property in self) {\n\t\treturn self[property];\n\t}\n\n\t/* istanbul ignore next */\n\tif (typeof window !== 'undefined' && window && property in window) {\n\t\treturn window[property];\n\t}\n\n\tif (typeof global !== 'undefined' && global && property in global) {\n\t\treturn global[property];\n\t}\n\n\t/* istanbul ignore next */\n\tif (typeof globalThis !== 'undefined' && globalThis) {\n\t\treturn globalThis[property];\n\t}\n};\n\nconst document = getGlobal('document');\nconst Headers = getGlobal('Headers');\nconst Response = getGlobal('Response');\nconst ReadableStream = getGlobal('ReadableStream');\nconst fetch = getGlobal('fetch');\nconst AbortController = getGlobal('AbortController');\nconst FormData = getGlobal('FormData');\n\nconst isObject = value => value !== null && typeof value === 'object';\nconst supportsAbortController = typeof AbortController === 'function';\nconst supportsStreams = typeof ReadableStream === 'function';\nconst supportsFormData = typeof FormData === 'function';\n\nconst deepMerge = (...sources) => {\n\tlet returnValue = {};\n\n\tfor (const source of sources) {\n\t\tif (Array.isArray(source)) {\n\t\t\tif (!(Array.isArray(returnValue))) {\n\t\t\t\treturnValue = [];\n\t\t\t}\n\n\t\t\treturnValue = [...returnValue, ...source];\n\t\t} else if (isObject(source)) {\n\t\t\tfor (let [key, value] of Object.entries(source)) {\n\t\t\t\tif (isObject(value) && Reflect.has(returnValue, key)) {\n\t\t\t\t\tvalue = deepMerge(returnValue[key], value);\n\t\t\t\t}\n\n\t\t\t\treturnValue = {...returnValue, [key]: value};\n\t\t\t}\n\t\t}\n\t}\n\n\treturn returnValue;\n};\n\nconst requestMethods = [\n\t'get',\n\t'post',\n\t'put',\n\t'patch',\n\t'head',\n\t'delete'\n];\n\nconst responseTypes = {\n\tjson: 'application/json',\n\ttext: 'text/*',\n\tformData: 'multipart/form-data',\n\tarrayBuffer: '*/*',\n\tblob: '*/*'\n};\n\nconst retryMethods = new Set([\n\t'get',\n\t'put',\n\t'head',\n\t'delete',\n\t'options',\n\t'trace'\n]);\n\nconst retryStatusCodes = new Set([\n\t408,\n\t413,\n\t429,\n\t500,\n\t502,\n\t503,\n\t504\n]);\n\nconst retryAfterStatusCodes = new Set([\n\t413,\n\t429,\n\t503\n]);\n\nclass HTTPError extends Error {\n\tconstructor(response) {\n\t\tsuper(response.statusText);\n\t\tthis.name = 'HTTPError';\n\t\tthis.response = response;\n\t}\n}\n\nclass TimeoutError extends Error {\n\tconstructor() {\n\t\tsuper('Request timed out');\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\nconst safeTimeout = (resolve, reject, ms) => {\n\tif (ms > 2147483647) { // The maximum value of a 32bit int (see #117)\n\t\treject(new RangeError('The `timeout` option cannot be greater than 2147483647'));\n\t}\n\n\treturn setTimeout(resolve, ms);\n};\n\nconst delay = ms => new Promise((resolve, reject) => safeTimeout(resolve, reject, ms));\n\n// `Promise.race()` workaround (#91)\nconst timeout = (promise, ms, abortController) =>\n\tnew Promise((resolve, reject) => {\n\t\tconst timeoutID = safeTimeout(() => {\n\t\t\tif (supportsAbortController) {\n\t\t\t\tabortController.abort();\n\t\t\t}\n\n\t\t\treject(new TimeoutError());\n\t\t}, reject, ms);\n\n\t\t/* eslint-disable promise/prefer-await-to-then */\n\t\tpromise\n\t\t\t.then(resolve)\n\t\t\t.catch(reject)\n\t\t\t.then(() => {\n\t\t\t\tclearTimeout(timeoutID);\n\t\t\t});\n\t\t/* eslint-enable promise/prefer-await-to-then */\n\t});\n\nconst normalizeRequestMethod = input => requestMethods.includes(input) ? input.toUpperCase() : input;\n\nclass Ky {\n\tconstructor(input, {\n\t\ttimeout = 10000,\n\t\thooks,\n\t\tthrowHttpErrors = true,\n\t\tsearchParams,\n\t\tjson,\n\t\t...otherOptions\n\t}) {\n\t\tthis._retryCount = 0;\n\n\t\tthis._options = {\n\t\t\tmethod: 'get',\n\t\t\tcredentials: 'same-origin', // TODO: This can be removed when the spec change is implemented in all browsers. Context: https://www.chromestatus.com/feature/4539473312350208\n\t\t\tretry: 2,\n\t\t\t...otherOptions\n\t\t};\n\n\t\tif (supportsAbortController) {\n\t\t\tthis.abortController = new AbortController();\n\t\t\tif (this._options.signal) {\n\t\t\t\tthis._options.signal.addEventListener('abort', () => {\n\t\t\t\t\tthis.abortController.abort();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._options.signal = this.abortController.signal;\n\t\t}\n\n\t\tthis._options.method = normalizeRequestMethod(this._options.method);\n\t\tthis._options.prefixUrl = String(this._options.prefixUrl || '');\n\t\tthis._input = String(input || '');\n\n\t\tif (this._options.prefixUrl && this._input.startsWith('/')) {\n\t\t\tthrow new Error('`input` must not begin with a slash when using `prefixUrl`');\n\t\t}\n\n\t\tif (this._options.prefixUrl && !this._options.prefixUrl.endsWith('/')) {\n\t\t\tthis._options.prefixUrl += '/';\n\t\t}\n\n\t\tthis._input = this._options.prefixUrl + this._input;\n\n\t\tif (searchParams) {\n\t\t\tconst url = new URL(this._input, document && document.baseURI);\n\t\t\tif (typeof searchParams === 'string' || (URLSearchParams && searchParams instanceof URLSearchParams)) {\n\t\t\t\turl.search = searchParams;\n\t\t\t} else if (Object.values(searchParams).every(param => typeof param === 'number' || typeof param === 'string')) {\n\t\t\t\turl.search = new URLSearchParams(searchParams).toString();\n\t\t\t} else {\n\t\t\t\tthrow new Error('The `searchParams` option must be either a string, `URLSearchParams` instance or an object with string and number values');\n\t\t\t}\n\n\t\t\tthis._input = url.toString();\n\t\t}\n\n\t\tthis._timeout = timeout;\n\t\tthis._hooks = deepMerge({\n\t\t\tbeforeRequest: [],\n\t\t\tafterResponse: []\n\t\t}, hooks);\n\t\tthis._throwHttpErrors = throwHttpErrors;\n\n\t\tconst headers = new Headers(this._options.headers || {});\n\n\t\tif (((supportsFormData && this._options.body instanceof FormData) || this._options.body instanceof URLSearchParams) && headers.has('content-type')) {\n\t\t\tthrow new Error(`The \\`content-type\\` header cannot be used with a ${this._options.body.constructor.name} body. It will be set automatically.`);\n\t\t}\n\n\t\tif (json) {\n\t\t\tif (this._options.body) {\n\t\t\t\tthrow new Error('The `json` option cannot be used with the `body` option');\n\t\t\t}\n\n\t\t\theaders.set('content-type', 'application/json');\n\t\t\tthis._options.body = JSON.stringify(json);\n\t\t}\n\n\t\tthis._options.headers = headers;\n\n\t\tconst fn = async () => {\n\t\t\tawait delay(1);\n\t\t\tlet response = await this._fetch();\n\n\t\t\tfor (const hook of this._hooks.afterResponse) {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tconst modifiedResponse = await hook(response.clone());\n\n\t\t\t\tif (modifiedResponse instanceof Response) {\n\t\t\t\t\tresponse = modifiedResponse;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!response.ok && this._throwHttpErrors) {\n\t\t\t\tthrow new HTTPError(response);\n\t\t\t}\n\n\t\t\t// If `onDownloadProgress` is passed, it uses the stream API internally\n\t\t\t/* istanbul ignore next */\n\t\t\tif (this._options.onDownloadProgress) {\n\t\t\t\tif (typeof this._options.onDownloadProgress !== 'function') {\n\t\t\t\t\tthrow new TypeError('The `onDownloadProgress` option must be a function');\n\t\t\t\t}\n\n\t\t\t\tif (!supportsStreams) {\n\t\t\t\t\tthrow new Error('Streams are not supported in your environment. `ReadableStream` is missing.');\n\t\t\t\t}\n\n\t\t\t\treturn this._stream(response.clone(), this._options.onDownloadProgress);\n\t\t\t}\n\n\t\t\treturn response;\n\t\t};\n\n\t\tconst isRetriableMethod = retryMethods.has(this._options.method.toLowerCase());\n\t\tconst result = isRetriableMethod ? this._retry(fn) : fn();\n\n\t\tfor (const [type, mimeType] of Object.entries(responseTypes)) {\n\t\t\tresult[type] = async () => {\n\t\t\t\theaders.set('accept', mimeType);\n\t\t\t\treturn (await result).clone()[type]();\n\t\t\t};\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t_calculateRetryDelay(error) {\n\t\tthis._retryCount++;\n\n\t\tif (this._retryCount < this._options.retry && !(error instanceof TimeoutError)) {\n\t\t\tif (error instanceof HTTPError) {\n\t\t\t\tif (!retryStatusCodes.has(error.response.status)) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tconst retryAfter = error.response.headers.get('Retry-After');\n\t\t\t\tif (retryAfter && retryAfterStatusCodes.has(error.response.status)) {\n\t\t\t\t\tlet after = Number(retryAfter);\n\t\t\t\t\tif (Number.isNaN(after)) {\n\t\t\t\t\t\tafter = Date.parse(retryAfter) - Date.now();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tafter *= 1000;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn after;\n\t\t\t\t}\n\n\t\t\t\tif (error.response.status === 413) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst BACKOFF_FACTOR = 0.3;\n\t\t\treturn BACKOFF_FACTOR * (2 ** (this._retryCount - 1)) * 1000;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tasync _retry(fn) {\n\t\ttry {\n\t\t\treturn await fn();\n\t\t} catch (error) {\n\t\t\tconst ms = this._calculateRetryDelay(error);\n\t\t\tif (ms !== 0 && this._retryCount > 0) {\n\t\t\t\tawait delay(ms);\n\t\t\t\treturn this._retry(fn);\n\t\t\t}\n\n\t\t\tif (this._throwHttpErrors) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync _fetch() {\n\t\tfor (const hook of this._hooks.beforeRequest) {\n\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\tawait hook(this._options);\n\t\t}\n\n\t\tif (this._timeout === false) {\n\t\t\treturn fetch(this._input, this._options);\n\t\t}\n\n\t\treturn timeout(fetch(this._input, this._options), this._timeout, this.abortController);\n\t}\n\n\t/* istanbul ignore next */\n\t_stream(response, onDownloadProgress) {\n\t\tconst totalBytes = Number(response.headers.get('content-length')) || 0;\n\t\tlet transferredBytes = 0;\n\n\t\treturn new Response(\n\t\t\tnew ReadableStream({\n\t\t\t\tstart(controller) {\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\tif (onDownloadProgress) {\n\t\t\t\t\t\tonDownloadProgress({percent: 0, transferredBytes: 0, totalBytes}, new Uint8Array());\n\t\t\t\t\t}\n\n\t\t\t\t\tasync function read() {\n\t\t\t\t\t\tconst {done, value} = await reader.read();\n\t\t\t\t\t\tif (done) {\n\t\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (onDownloadProgress) {\n\t\t\t\t\t\t\ttransferredBytes += value.byteLength;\n\t\t\t\t\t\t\tconst percent = totalBytes === 0 ? 0 : transferredBytes / totalBytes;\n\t\t\t\t\t\t\tonDownloadProgress({percent, transferredBytes, totalBytes}, value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.enqueue(value);\n\t\t\t\t\t\tread();\n\t\t\t\t\t}\n\n\t\t\t\t\tread();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n\nconst validateAndMerge = (...sources) => {\n\tfor (const source of sources) {\n\t\tif ((!isObject(source) || Array.isArray(source)) && typeof source !== 'undefined') {\n\t\t\tthrow new TypeError('The `options` argument must be an object');\n\t\t}\n\t}\n\n\treturn deepMerge({}, ...sources);\n};\n\nconst createInstance = defaults => {\n\tconst ky = (input, options) => new Ky(input, validateAndMerge(defaults, options));\n\n\tfor (const method of requestMethods) {\n\t\tky[method] = (input, options) => new Ky(input, validateAndMerge(defaults, options, {method}));\n\t}\n\n\tky.create = newDefaults => createInstance(validateAndMerge(newDefaults));\n\tky.extend = newDefaults => createInstance(validateAndMerge(defaults, newDefaults));\n\n\treturn ky;\n};\n\nexport default createInstance();\n\nexport {\n\tHTTPError,\n\tTimeoutError\n};\n"]},"metadata":{},"sourceType":"module"}