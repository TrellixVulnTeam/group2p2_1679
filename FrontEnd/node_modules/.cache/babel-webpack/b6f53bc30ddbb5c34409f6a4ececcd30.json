{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/18048/Documents/Revature/Projects/Project 2/group2p2/frontend/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // Imports\n\nconst ow_1 = __importDefault(require(\"ow\")); // Utils\n\n\nconst utils_1 = require(\"./utils\");\n/**\n * Requests related to meta information regarding the Jikan REST Instance\n *\n * @param type - The type you're searching for\n * @param period - The period you're searching for\n * @param offset - 1,000 requests are shown per page, you can use the offset to show more\n */\n\n\nconst requests = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (type = 'anime', period = 'monthly', offset = 1000) {\n    ow_1.default(offset, ow_1.default.number.positive);\n    const {\n      body\n    } = yield utils_1.queue.add( /*#__PURE__*/_asyncToGenerator(function* () {\n      return utils_1.realTimeapi(`/meta/requests/${type}/${period}/${offset}`, {});\n    }));\n    return body;\n  });\n\n  return function requests() {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Fetches the status of the Jikan REST API\n */\n\n\nconst status = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(function* () {\n    const {\n      body\n    } = yield utils_1.queue.add( /*#__PURE__*/_asyncToGenerator(function* () {\n      return utils_1.realTimeapi('/meta/status', {});\n    }));\n    return body;\n  });\n\n  return function status() {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.default = {\n  requests,\n  status\n};","map":{"version":3,"sources":["C:/Users/18048/Documents/Revature/Projects/Project 2/group2p2/frontend/node_modules/jikan-client/dist/meta.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","ow_1","require","utils_1","requests","type","period","offset","default","number","positive","body","queue","add","realTimeapi","status"],"mappings":"AAAA;;;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C,E,CACA;;AACA,MAAMC,IAAI,GAAGP,eAAe,CAACQ,OAAO,CAAC,IAAD,CAAR,CAA5B,C,CACA;;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,QAAQ;AAAA,+BAAG,WAAOC,IAAI,GAAG,OAAd,EAAuBC,MAAM,GAAG,SAAhC,EAA2CC,MAAM,GAAG,IAApD,EAA6D;AAC1EN,IAAAA,IAAI,CAACO,OAAL,CAAaD,MAAb,EAAqBN,IAAI,CAACO,OAAL,CAAaC,MAAb,CAAoBC,QAAzC;AACA,UAAM;AAAEC,MAAAA;AAAF,cAAiBR,OAAO,CAACS,KAAR,CAAcC,GAAd,iCAAkB;AAAA,aAAYV,OAAO,CAACW,WAAR,CAAqB,kBAAiBT,IAAK,IAAGC,MAAO,IAAGC,MAAO,EAA/D,EAAkE,EAAlE,CAAZ;AAAA,KAAlB,EAAvB;AACA,WAAOI,IAAP;AACH,GAJa;;AAAA,kBAARP,QAAQ;AAAA;AAAA;AAAA,GAAd;AAKA;AACA;AACA;;;AACA,MAAMW,MAAM;AAAA,gCAAG,aAAY;AACvB,UAAM;AAAEJ,MAAAA;AAAF,cAAiBR,OAAO,CAACS,KAAR,CAAcC,GAAd,iCAAkB;AAAA,aAAYV,OAAO,CAACW,WAAR,CAAoB,cAApB,EAAoC,EAApC,CAAZ;AAAA,KAAlB,EAAvB;AACA,WAAOH,IAAP;AACH,GAHW;;AAAA,kBAANI,MAAM;AAAA;AAAA;AAAA,GAAZ;;AAIAhB,OAAO,CAACS,OAAR,GAAkB;AACdJ,EAAAA,QADc;AAEdW,EAAAA;AAFc,CAAlB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Imports\nconst ow_1 = __importDefault(require(\"ow\"));\n// Utils\nconst utils_1 = require(\"./utils\");\n/**\n * Requests related to meta information regarding the Jikan REST Instance\n *\n * @param type - The type you're searching for\n * @param period - The period you're searching for\n * @param offset - 1,000 requests are shown per page, you can use the offset to show more\n */\nconst requests = async (type = 'anime', period = 'monthly', offset = 1000) => {\n    ow_1.default(offset, ow_1.default.number.positive);\n    const { body } = await utils_1.queue.add(async () => utils_1.realTimeapi(`/meta/requests/${type}/${period}/${offset}`, {}));\n    return body;\n};\n/**\n * Fetches the status of the Jikan REST API\n */\nconst status = async () => {\n    const { body } = await utils_1.queue.add(async () => utils_1.realTimeapi('/meta/status', {}));\n    return body;\n};\nexports.default = {\n    requests,\n    status\n};\n"]},"metadata":{},"sourceType":"script"}